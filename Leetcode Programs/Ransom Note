class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {

// ===================== Using Store array=========================
        int[] store = new int[26];

        for (int i = 0; i < ransomNote.length(); i++) {
            char ch = ransomNote.charAt(i);
            store[ch - 'a']++;
        }
        for (int i = 0; i < magazine.length(); i++) {
            char ch = magazine.charAt(i);
            store[ch - 'a']--;
        }
        for (int count : store) {
            if (count > 0) {
                return false;
            }
        }
        return true;

        // ==================== Using HashMap =========================
        // Map<Character, Integer> map1 = new HashMap<>();
        // Map<Character, Integer> map2 = new HashMap<>();

        // for (int i = 0; i < ransomNote.length(); i++) {
        // char c = ransomNote.charAt(i);
        // map1.put(c, map1.getOrDefault(c, 0) + 1);
        // }

        // for (int i = 0; i < magazine.length(); i++) {
        // char c = magazine.charAt(i);
        // map2.put(c, map2.getOrDefault(c, 0) + 1);
        // }

        // for (Map.Entry<Character, Integer> entry : map1.entrySet()) {
        // char c = entry.getKey();
        // int requiredCount = entry.getValue();
        // int availableCount = map2.getOrDefault(c, 0);

        // if (availableCount >= requiredCount) {
        // return true;
        // }
        // }
        // return false;

    }
}
