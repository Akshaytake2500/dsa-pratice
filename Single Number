class Solution {
    public int singleNumber(int[] nums) {
       
       int res=nums[0];
       for(int i=1;i<nums.length;i++){
        res=res^nums[i];
       }
       return res;
       
       
        // Set<Integer> set=new HashSet<>();
        // for(int num:nums){
        //     if(set.contains(num)){
        //         set.remove(num);
        //     }
        //     else{
        //         set.add(num);
        //     }
        // }
        // return set.iterator().next();
        
        
        // Map<Integer,Integer> map=new HashMap<>();
        // for(int num:nums){
        //     map.put(num,map.getOrDefault(num,0)+1);
        // }
        // for(int num:nums){
        //     if(map.get(num)==1){
        //         return num;
        //     }
        // }

        // if (nums.length == 1) {
        //     return nums[0];
        // }
        // for(int i=0;i<nums.length;i++){
        // for(int j=i+1;j<nums.length;j++){
        // if(nums[i]==nums[j]){
        // count++;
        // }
        // else{
        // System.out.println(nums[i]);
        // return nums[i];
        // }
        // }
        // }


        // return -1;
    }
}
